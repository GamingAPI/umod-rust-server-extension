/* 
 * GamingEventApi API
 *
 * GamingEventApi API for the rust server
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jonas-lt@live.dk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing RankPlayer
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RankPlayerTests
    {
        // TODO uncomment below to declare an instance variable for RankPlayer
        //private RankPlayer instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of RankPlayer
            //instance = new RankPlayer();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RankPlayer
        /// </summary>
        [Test]
        public void RankPlayerInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" RankPlayer
            //Assert.IsInstanceOf(typeof(RankPlayer), instance);
        }


        /// <summary>
        /// Test the property 'SteamId'
        /// </summary>
        [Test]
        public void SteamIdTest()
        {
            // TODO unit test for the property 'SteamId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'KillCount'
        /// </summary>
        [Test]
        public void KillCountTest()
        {
            // TODO unit test for the property 'KillCount'
        }
        /// <summary>
        /// Test the property 'DeathCount'
        /// </summary>
        [Test]
        public void DeathCountTest()
        {
            // TODO unit test for the property 'DeathCount'
        }
        /// <summary>
        /// Test the property 'KillRank'
        /// </summary>
        [Test]
        public void KillRankTest()
        {
            // TODO unit test for the property 'KillRank'
        }

    }

}

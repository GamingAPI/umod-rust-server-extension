<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Org.OpenAPITools</name>
    </assembly>
    <members>
        <member name="T:Org.OpenAPITools.Api.IPlayerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerWithHttpInfo(System.Int32,System.String,System.Action{System.Exception,Org.OpenAPITools.Client.ApiResponse{Org.OpenAPITools.Model.RankPlayer}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="steamId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetTitlesOfPlayerWithHttpInfo(System.Int32,System.String,System.Action{System.Exception,Org.OpenAPITools.Client.ApiResponse{System.Collections.Generic.List{Org.OpenAPITools.Model.PlayerTitle}}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="steamId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementGroupsForPlayerOnServer(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups.
            </summary>
            <remarks>
            A list of the player&#39;s achievements devided into groups.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>List&lt;PlayerAchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementGroupsForPlayerOnServerWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups.
            </summary>
            <remarks>
            A list of the player&#39;s achievements devided into groups.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of List&lt;PlayerAchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementsOfPlayer(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements.
            </summary>
            <remarks>
            This returns all the players obtained achievements
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>List&lt;PlayerAchievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementsOfPlayerWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements.
            </summary>
            <remarks>
            This returns all the players obtained achievements
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of List&lt;PlayerAchievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeaths(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeathsWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeathsOnWipe(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeathsOnWipeWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKills(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKillsWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKillsInWipe(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKillsInWipeWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayer(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerWithHttpInfo(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerOnWipe(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server in a specific wipe.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerOnWipeWithHttpInfo(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server in a specific wipe.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>ApiResponse of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetTitlesOfPlayer(System.Int32,System.String)">
            <summary>
            A list of titles for the player.
            </summary>
            <remarks>
            This returns all the players titles
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>List&lt;PlayerTitle&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetTitlesOfPlayerWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of titles for the player.
            </summary>
            <remarks>
            This returns all the players titles
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of List&lt;PlayerTitle&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementGroupsForPlayerOnServerAsync(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups.
            </summary>
            <remarks>
            A list of the player&#39;s achievements devided into groups.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of List&lt;PlayerAchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementGroupsForPlayerOnServerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups.
            </summary>
            <remarks>
            A list of the player&#39;s achievements devided into groups.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (List&lt;PlayerAchievementGroup&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementsOfPlayerAsync(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements.
            </summary>
            <remarks>
            This returns all the players obtained achievements
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of List&lt;PlayerAchievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetAchievementsOfPlayerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements.
            </summary>
            <remarks>
            This returns all the players obtained achievements
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (List&lt;PlayerAchievement&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeathsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeathsAsyncWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeathsOnWipeAsync(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatDeathsOnWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server
            </summary>
            <remarks>
            This returns all the players deaths on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKillsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKillsAsyncWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKillsInWipeAsync(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetPlayerCombatKillsInWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server
            </summary>
            <remarks>
            This returns all the players kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerAsync(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (RankPlayer)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerOnWipeAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server in a specific wipe.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>Task of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetRankOfPlayerOnWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe.
            </summary>
            <remarks>
            This returns the rank of the specific player on the specific server in a specific wipe.
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>Task of ApiResponse (RankPlayer)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetTitlesOfPlayerAsync(System.Int32,System.String)">
            <summary>
            A list of titles for the player.
            </summary>
            <remarks>
            This returns all the players titles
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of List&lt;PlayerTitle&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IPlayerApi.GetTitlesOfPlayerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of titles for the player.
            </summary>
            <remarks>
            This returns all the players titles
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (List&lt;PlayerTitle&gt;)</returns>
        </member>
        <member name="T:Org.OpenAPITools.Api.PlayerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Api.PlayerApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Api.PlayerApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.#ctor(Org.OpenAPITools.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Api.PlayerApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Org.OpenAPITools.Api.PlayerApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.OpenAPITools.Api.PlayerApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementGroupsForPlayerOnServer(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups. A list of the player&#39;s achievements devided into groups.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>List&lt;PlayerAchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementGroupsForPlayerOnServerWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups. A list of the player&#39;s achievements devided into groups.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of List&lt;PlayerAchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementGroupsForPlayerOnServerAsync(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups. A list of the player&#39;s achievements devided into groups.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of List&lt;PlayerAchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementGroupsForPlayerOnServerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of the player&#39;s achievements devided into groups. A list of the player&#39;s achievements devided into groups.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (List&lt;PlayerAchievementGroup&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementsOfPlayer(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements. This returns all the players obtained achievements
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>List&lt;PlayerAchievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementsOfPlayerWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements. This returns all the players obtained achievements
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of List&lt;PlayerAchievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementsOfPlayerAsync(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements. This returns all the players obtained achievements
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of List&lt;PlayerAchievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetAchievementsOfPlayerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of players obtained achievements. This returns all the players obtained achievements
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (List&lt;PlayerAchievement&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeaths(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeathsWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeathsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeathsAsyncWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeathsOnWipe(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeathsOnWipeWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeathsOnWipeAsync(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatDeathsOnWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players deaths on a server This returns all the players deaths on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the deaths on</param>
            <param name="wipeId">The wipe id to retrieve the deaths on</param>
            <param name="steamId">The player&#39;s steamID64 to find the deaths for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKills(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKillsWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKillsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKillsAsyncWithHttpInfo(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKillsInWipe(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKillsInWipeWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKillsInWipeAsync(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetPlayerCombatKillsInWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            A players kills on a server This returns all the players kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained kills for, must be 17 chars long.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayer(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server. This returns the rank of the specific player on the specific server.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerWithHttpInfo(System.Int32,System.String,System.Action{Org.OpenAPITools.Client.ApiResponse{Org.OpenAPITools.Model.RankPlayer}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="steamId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerWithHttpInfo(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server. This returns the rank of the specific player on the specific server.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerAsync(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server. This returns the rank of the specific player on the specific server.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server. This returns the rank of the specific player on the specific server.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (RankPlayer)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerOnWipe(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe. This returns the rank of the specific player on the specific server in a specific wipe.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerOnWipeWithHttpInfo(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe. This returns the rank of the specific player on the specific server in a specific wipe.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>ApiResponse of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerOnWipeAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe. This returns the rank of the specific player on the specific server in a specific wipe.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>Task of RankPlayer</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetRankOfPlayerOnWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.String)">
            <summary>
            Rank stats on specific player on a specific server on a specific wipe. This returns the rank of the specific player on the specific server in a specific wipe.
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long.</param>
            <returns>Task of ApiResponse (RankPlayer)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetTitlesOfPlayer(System.Int32,System.String)">
            <summary>
            A list of titles for the player. This returns all the players titles
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>List&lt;PlayerTitle&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetTitlesOfPlayerWithHttpInfo(System.Int32,System.String,System.Action{System.Exception,Org.OpenAPITools.Client.ApiResponse{System.Collections.Generic.List{Org.OpenAPITools.Model.PlayerTitle}}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="steamId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetTitlesOfPlayerWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of titles for the player. This returns all the players titles
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>ApiResponse of List&lt;PlayerTitle&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetTitlesOfPlayerAsync(System.Int32,System.String)">
            <summary>
            A list of titles for the player. This returns all the players titles
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of List&lt;PlayerTitle&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.PlayerApi.GetTitlesOfPlayerAsyncWithHttpInfo(System.Int32,System.String)">
            <summary>
            A list of titles for the player. This returns all the players titles
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="steamId">The player&#39;s steamID64 to find the obtained achievements for, must be 17 chars long.</param>
            <returns>Task of ApiResponse (List&lt;PlayerTitle&gt;)</returns>
        </member>
        <member name="T:Org.OpenAPITools.Api.IServerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetTitlesFromServerWithHttpInfo(System.Int32,System.Action{Org.OpenAPITools.Client.ApiResponse{System.Collections.Generic.List{Org.OpenAPITools.Model.Title}}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementsOfServerWithHttpInfo(System.Int32,System.Action{Org.OpenAPITools.Client.ApiResponse{System.Collections.Generic.List{Org.OpenAPITools.Model.Achievement}}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementGroupsOfServer(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server
            </summary>
            <remarks>
            This returns the list of groups with subgroups and their achievements for a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>List&lt;AchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementGroupsOfServerWithHttpInfo(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server
            </summary>
            <remarks>
            This returns the list of groups with subgroups and their achievements for a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>ApiResponse of List&lt;AchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementsOfServer(System.Int32)">
            <summary>
            A list of all achievements on specific server.
            </summary>
            <remarks>
            This returns all the achievements on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>List&lt;Achievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementsOfServerWithHttpInfo(System.Int32)">
            <summary>
            A list of all achievements on specific server.
            </summary>
            <remarks>
            This returns all the achievements on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>ApiResponse of List&lt;Achievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetCombatKillsOnWipe(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe
            </summary>
            <remarks>
            This returns all the kills on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetCombatKillsOnWipeWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe
            </summary>
            <remarks>
            This returns all the kills on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForCurrentWipe(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForCurrentWipeWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForWipe(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForWipeWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboards(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboardsWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboardsForWipe(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboardsForWipeWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServer(System.Int32)">
            <summary>
            Get basic server information
            </summary>
            <remarks>
            This returns basic information about a specific server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>Server</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerWithHttpInfo(System.Int32)">
            <summary>
            Get basic server information
            </summary>
            <remarks>
            This returns basic information about a specific server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>ApiResponse of Server</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerCombatKills(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server
            </summary>
            <remarks>
            This returns all the kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerCombatKillsWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server
            </summary>
            <remarks>
            This returns all the kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerWipes(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server
            </summary>
            <remarks>
            This returns all the wipes on the server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;Wipe&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerWipesWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server
            </summary>
            <remarks>
            This returns all the wipes on the server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;Wipe&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServers">
            <summary>
            Get all the servers
            </summary>
            <remarks>
            This returns basic information about all the servers 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>List&lt;Server&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServersWithHttpInfo">
            <summary>
            Get all the servers
            </summary>
            <remarks>
            This returns basic information about all the servers 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of List&lt;Server&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetTitlesFromServer(System.Int32)">
            <summary>
            A list of all titles on specific server.
            </summary>
            <remarks>
            This returns all the titles on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>List&lt;Title&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetTitlesFromServerWithHttpInfo(System.Int32)">
            <summary>
            A list of all titles on specific server.
            </summary>
            <remarks>
            This returns all the titles on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>ApiResponse of List&lt;Title&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementGroupsOfServerAsync(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server
            </summary>
            <remarks>
            This returns the list of groups with subgroups and their achievements for a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>Task of List&lt;AchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementGroupsOfServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server
            </summary>
            <remarks>
            This returns the list of groups with subgroups and their achievements for a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>Task of ApiResponse (List&lt;AchievementGroup&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementsOfServerAsync(System.Int32)">
            <summary>
            A list of all achievements on specific server.
            </summary>
            <remarks>
            This returns all the achievements on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>Task of List&lt;Achievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetAchievementsOfServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            A list of all achievements on specific server.
            </summary>
            <remarks>
            This returns all the achievements on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>Task of ApiResponse (List&lt;Achievement&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetCombatKillsOnWipeAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe
            </summary>
            <remarks>
            This returns all the kills on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetCombatKillsOnWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe
            </summary>
            <remarks>
            This returns all the kills on a specific server in the specific wipe
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForCurrentWipeAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForCurrentWipeAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;HuntForWeapon&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForWipeAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetHuntForWeaponsForWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;HuntForWeapon&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboardsAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboardsAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;LeaderBoardPlayer&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboardsForWipeAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetLeaderboardsForWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe.
            </summary>
            <remarks>
            This returns a list of players on the leaderboard 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;LeaderBoardPlayer&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerAsync(System.Int32)">
            <summary>
            Get basic server information
            </summary>
            <remarks>
            This returns basic information about a specific server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>Task of Server</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            Get basic server information
            </summary>
            <remarks>
            This returns basic information about a specific server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>Task of ApiResponse (Server)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerCombatKillsAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server
            </summary>
            <remarks>
            This returns all the kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerCombatKillsAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server
            </summary>
            <remarks>
            This returns all the kills on a specific server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerWipesAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server
            </summary>
            <remarks>
            This returns all the wipes on the server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;Wipe&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServerWipesAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server
            </summary>
            <remarks>
            This returns all the wipes on the server 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;Wipe&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServersAsync">
            <summary>
            Get all the servers
            </summary>
            <remarks>
            This returns basic information about all the servers 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of List&lt;Server&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetServersAsyncWithHttpInfo">
            <summary>
            Get all the servers
            </summary>
            <remarks>
            This returns basic information about all the servers 
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (List&lt;Server&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetTitlesFromServerAsync(System.Int32)">
            <summary>
            A list of all titles on specific server.
            </summary>
            <remarks>
            This returns all the titles on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>Task of List&lt;Title&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.IServerApi.GetTitlesFromServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            A list of all titles on specific server.
            </summary>
            <remarks>
            This returns all the titles on a server
            </remarks>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>Task of ApiResponse (List&lt;Title&gt;)</returns>
        </member>
        <member name="T:Org.OpenAPITools.Api.ServerApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Api.ServerApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Api.ServerApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.#ctor(Org.OpenAPITools.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Api.ServerApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Org.OpenAPITools.Api.ServerApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.OpenAPITools.Api.ServerApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementGroupsOfServer(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server This returns the list of groups with subgroups and their achievements for a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>List&lt;AchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementGroupsOfServerWithHttpInfo(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server This returns the list of groups with subgroups and their achievements for a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>ApiResponse of List&lt;AchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementGroupsOfServerAsync(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server This returns the list of groups with subgroups and their achievements for a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>Task of List&lt;AchievementGroup&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementGroupsOfServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            A list of all groups with subgroups and achievements for a server This returns the list of groups with subgroups and their achievements for a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievement groups for.</param>
            <returns>Task of ApiResponse (List&lt;AchievementGroup&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementsOfServer(System.Int32)">
            <summary>
            A list of all achievements on specific server. This returns all the achievements on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>List&lt;Achievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementsOfServerWithHttpInfo(System.Int32,System.Action{Org.OpenAPITools.Client.ApiResponse{System.Collections.Generic.List{Org.OpenAPITools.Model.Achievement}}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementsOfServerWithHttpInfo(System.Int32)">
            <summary>
            A list of all achievements on specific server. This returns all the achievements on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>ApiResponse of List&lt;Achievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementsOfServerAsync(System.Int32)">
            <summary>
            A list of all achievements on specific server. This returns all the achievements on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>Task of List&lt;Achievement&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetAchievementsOfServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            A list of all achievements on specific server. This returns all the achievements on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the achievements for</param>
            <returns>Task of ApiResponse (List&lt;Achievement&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetCombatKillsOnWipe(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe This returns all the kills on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetCombatKillsOnWipeWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe This returns all the kills on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetCombatKillsOnWipeAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe This returns all the kills on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetCombatKillsOnWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server in a wipe This returns all the kills on a specific server in the specific wipe
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="wipeId">The wipe id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForCurrentWipe(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe. This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForCurrentWipeWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe. This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForCurrentWipeAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe. This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForCurrentWipeAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list of the current wipe. This returns a list of all the hunt for weapons items for this wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;HuntForWeapon&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForWipe(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe. This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForWipeWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe. This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForWipeAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe. This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;HuntForWeapon&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetHuntForWeaponsForWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hunt for weapons list for the specific server in the specific wipe. This returns a list of all the hunt for weapons items for the specific wipe and if any of them has been found and by who.. 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the hunt for weapons for.</param>
            <param name="wipeId">The wipe id to retrieve the hunt for weapons for.</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;HuntForWeapon&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboards(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboardsWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboardsAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboardsAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;LeaderBoardPlayer&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboardsForWipe(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboardsForWipeWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboardsForWipeAsync(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;LeaderBoardPlayer&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetLeaderboardsForWipeAsyncWithHttpInfo(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Leaderboard stats on specific server in the specific wipe. This returns a list of players on the leaderboard 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the leaderboard for</param>
            <param name="wipeId">The wipe id to retrieve the leaderboard for</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;LeaderBoardPlayer&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServer(System.Int32)">
            <summary>
            Get basic server information This returns basic information about a specific server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>Server</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerWithHttpInfo(System.Int32)">
            <summary>
            Get basic server information This returns basic information about a specific server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>ApiResponse of Server</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerAsync(System.Int32)">
            <summary>
            Get basic server information This returns basic information about a specific server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>Task of Server</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            Get basic server information This returns basic information about a specific server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the basic information about</param>
            <returns>Task of ApiResponse (Server)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerCombatKills(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server This returns all the kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerCombatKillsWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server This returns all the kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerCombatKillsAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server This returns all the kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;CombatKill&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerCombatKillsAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kills on a server This returns all the kills on a specific server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the kills on</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;CombatKill&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerWipes(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server This returns all the wipes on the server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>List&lt;Wipe&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerWipesWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server This returns all the wipes on the server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>ApiResponse of List&lt;Wipe&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerWipesAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server This returns all the wipes on the server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of List&lt;Wipe&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServerWipesAsyncWithHttpInfo(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all wipes from a server This returns all the wipes on the server 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the wipes from</param>
            <param name="offset">The number of items to skip before starting to collect the result set. (optional)</param>
            <param name="limit">The numbers of items to return. (optional)</param>
            <returns>Task of ApiResponse (List&lt;Wipe&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServers">
            <summary>
            Get all the servers This returns basic information about all the servers 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>List&lt;Server&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServersWithHttpInfo">
            <summary>
            Get all the servers This returns basic information about all the servers 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of List&lt;Server&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServersAsync">
            <summary>
            Get all the servers This returns basic information about all the servers 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of List&lt;Server&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetServersAsyncWithHttpInfo">
            <summary>
            Get all the servers This returns basic information about all the servers 
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (List&lt;Server&gt;)</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetTitlesFromServer(System.Int32)">
            <summary>
            A list of all titles on specific server. This returns all the titles on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>List&lt;Title&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetTitlesFromServerWithHttpInfo(System.Int32,System.Action{Org.OpenAPITools.Client.ApiResponse{System.Collections.Generic.List{Org.OpenAPITools.Model.Title}}})">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetTitlesFromServerWithHttpInfo(System.Int32)">
            <summary>
            A list of all titles on specific server. This returns all the titles on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>ApiResponse of List&lt;Title&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetTitlesFromServerAsync(System.Int32)">
            <summary>
            A list of all titles on specific server. This returns all the titles on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>Task of List&lt;Title&gt;</returns>
        </member>
        <member name="M:Org.OpenAPITools.Api.ServerApi.GetTitlesFromServerAsyncWithHttpInfo(System.Int32)">
            <summary>
            A list of all titles on specific server. This returns all the titles on a server
            </summary>
            <exception cref="T:Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="serverId">The server id to retrieve the titles for</param>
            <returns>Task of ApiResponse (List&lt;Title&gt;)</returns>
        </member>
        <member name="T:Org.OpenAPITools.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.ApiClient" /> class
            with default configuration.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.#ctor(Org.OpenAPITools.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.ApiClient" /> class
            with default base path (https://virtserver.swaggerhub.com/jonaslagoni/RustServer/1.0.0).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.ApiClient" /> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:Org.OpenAPITools.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:Org.OpenAPITools.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:Org.OpenAPITools.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:Org.OpenAPITools.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="collectionFormat">Collection format.</param>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="T:Org.OpenAPITools.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="T:Org.OpenAPITools.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="T:Org.OpenAPITools.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="F:Org.OpenAPITools.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:Org.OpenAPITools.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="F:Org.OpenAPITools.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:Org.OpenAPITools.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.Configuration" /> class
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.Configuration" /> class
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.#ctor(Org.OpenAPITools.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.Configuration" /> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">HTTP connection timeout (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.#ctor(Org.OpenAPITools.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:Org.OpenAPITools.Client.Configuration.ApiClient" /> based on this <see cref="T:Org.OpenAPITools.Client.Configuration" /> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.OpenAPITools.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="T:Org.OpenAPITools.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:Org.OpenAPITools.Client.GlobalConfiguration">
            <summary>
            <see cref="T:Org.OpenAPITools.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .openapi-generator-ignore file.
            </remarks>
        </member>
        <member name="T:Org.OpenAPITools.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.OpenAPITools.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:Org.OpenAPITools.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="M:Org.OpenAPITools.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="T:Org.OpenAPITools.Client.OpenAPIDateConverter">
            <summary>
            Formatter for 'date' openapi formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Client.OpenAPIDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Client.OpenAPIDateConverter" /> class.
            </summary>
        </member>
        <member name="T:Org.OpenAPITools.Model.Achievement">
            <summary>
            Achievement
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Achievement" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.#ctor(System.Int32,System.String,System.String,System.Int32,System.Collections.Generic.List{Org.OpenAPITools.Model.RelatedTitle})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Achievement" /> class.
            </summary>
            <param name="achievementId">achievementId (required).</param>
            <param name="achievementTitle">achievementTitle (required).</param>
            <param name="achievementDesc">achievementDesc (required).</param>
            <param name="achievementPoint">achievementPoint (required).</param>
            <param name="relatedTitles">relatedTitles.</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.Achievement.AchievementId">
            <summary>
            Gets or Sets AchievementId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Achievement.AchievementTitle">
            <summary>
            Gets or Sets AchievementTitle
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Achievement.AchievementDesc">
            <summary>
            Gets or Sets AchievementDesc
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Achievement.AchievementPoint">
            <summary>
            Gets or Sets AchievementPoint
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Achievement.RelatedTitles">
            <summary>
            Gets or Sets RelatedTitles
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.Equals(Org.OpenAPITools.Model.Achievement)">
            <summary>
            Returns true if Achievement instances are equal
            </summary>
            <param name="input">Instance of Achievement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Achievement.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.AchievementGroup">
            <summary>
            AchievementGroup
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.AchievementGroup" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.#ctor(System.Collections.Generic.List{Org.OpenAPITools.Model.AchievementGroup},System.Collections.Generic.List{Org.OpenAPITools.Model.Achievement},System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.AchievementGroup" /> class.
            </summary>
            <param name="subGroups">subGroups (required).</param>
            <param name="achievements">achievements (required).</param>
            <param name="icon">icon.</param>
            <param name="title">title (required).</param>
            <param name="description">description (required).</param>
            <param name="groupId">groupId (required).</param>
            <param name="achievementsCount">It is the total amount of achievements in this group and sub groups. (required).</param>
            <param name="achievementPoints">achievementPoints (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.SubGroups">
            <summary>
            Gets or Sets SubGroups
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.Achievements">
            <summary>
            Gets or Sets Achievements
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.Icon">
            <summary>
            Gets or Sets Icon
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.Title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.GroupId">
            <summary>
            Gets or Sets GroupId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.AchievementsCount">
            <summary>
            It is the total amount of achievements in this group and sub groups.
            </summary>
            <value>It is the total amount of achievements in this group and sub groups.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.AchievementGroup.AchievementPoints">
            <summary>
            Gets or Sets AchievementPoints
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.Equals(Org.OpenAPITools.Model.AchievementGroup)">
            <summary>
            Returns true if AchievementGroup instances are equal
            </summary>
            <param name="input">Instance of AchievementGroup to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.AchievementGroup.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.CombatKill">
            <summary>
            CombatKill
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.CombatKill" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.#ctor(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Org.OpenAPITools.Model.Hit})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.CombatKill" /> class.
            </summary>
            <param name="victim">The victims&#39;s steamID64, must be 17 chars long. (required).</param>
            <param name="killer">The killers&#39;s steamID64, must be 17 chars long. (required).</param>
            <param name="assists">assists (required).</param>
            <param name="hits">This array list is sorted inverted, so the last hit (kill hit) at index 0, second last hit at index 1, etc (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.CombatKill.Victim">
            <summary>
            The victims&#39;s steamID64, must be 17 chars long.
            </summary>
            <value>The victims&#39;s steamID64, must be 17 chars long.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.CombatKill.Killer">
            <summary>
            The killers&#39;s steamID64, must be 17 chars long.
            </summary>
            <value>The killers&#39;s steamID64, must be 17 chars long.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.CombatKill.Assists">
            <summary>
            Gets or Sets Assists
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.CombatKill.Hits">
            <summary>
            This array list is sorted inverted, so the last hit (kill hit) at index 0, second last hit at index 1, etc
            </summary>
            <value>This array list is sorted inverted, so the last hit (kill hit) at index 0, second last hit at index 1, etc</value>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.Equals(Org.OpenAPITools.Model.CombatKill)">
            <summary>
            Returns true if CombatKill instances are equal
            </summary>
            <param name="input">Instance of CombatKill to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.CombatKill.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.Hit">
            <summary>
            Hit
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Hit" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.#ctor(System.String,System.String,System.DateTime,System.Decimal,System.Decimal,System.Int32,Org.OpenAPITools.Model.HitAttackerActiveItem,Org.OpenAPITools.Model.HitAttackerActiveItem,Org.OpenAPITools.Model.PlayerPosition,Org.OpenAPITools.Model.PlayerPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Hit" /> class.
            </summary>
            <param name="attacker">The attacker&#39;s steamID64, must be 17 chars long. (required).</param>
            <param name="victim">The attacker&#39;s steamID64, must be 17 chars long. (required).</param>
            <param name="hitTimestamp">hitTimestamp (required).</param>
            <param name="hitDamage">hitDamage (required).</param>
            <param name="hitDistance">hitDistance.</param>
            <param name="hitAreaId">1&#x3D;\&quot;Head\&quot;, 2&#x3D;\&quot;Chest\&quot;, 4&#x3D;\&quot;Stomach\&quot;, 8&#x3D;\&quot;Arm\&quot;, 16&#x3D;\&quot;Hand\&quot;, 32&#x3D;\&quot;Leg\&quot;, 64&#x3D;\&quot;Foot\&quot;, -1&#x3D;\&quot;Everywhere\&quot; (required).</param>
            <param name="attackerActiveItem">attackerActiveItem (required).</param>
            <param name="victimActiveItem">victimActiveItem (required).</param>
            <param name="attackerPosition">attackerPosition (required).</param>
            <param name="victimPosition">victimPosition (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.Attacker">
            <summary>
            The attacker&#39;s steamID64, must be 17 chars long.
            </summary>
            <value>The attacker&#39;s steamID64, must be 17 chars long.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.Victim">
            <summary>
            The attacker&#39;s steamID64, must be 17 chars long.
            </summary>
            <value>The attacker&#39;s steamID64, must be 17 chars long.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.HitTimestamp">
            <summary>
            Gets or Sets HitTimestamp
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.HitDamage">
            <summary>
            Gets or Sets HitDamage
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.HitDistance">
            <summary>
            Gets or Sets HitDistance
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.HitAreaId">
            <summary>
            1&#x3D;\&quot;Head\&quot;, 2&#x3D;\&quot;Chest\&quot;, 4&#x3D;\&quot;Stomach\&quot;, 8&#x3D;\&quot;Arm\&quot;, 16&#x3D;\&quot;Hand\&quot;, 32&#x3D;\&quot;Leg\&quot;, 64&#x3D;\&quot;Foot\&quot;, -1&#x3D;\&quot;Everywhere\&quot;
            </summary>
            <value>1&#x3D;\&quot;Head\&quot;, 2&#x3D;\&quot;Chest\&quot;, 4&#x3D;\&quot;Stomach\&quot;, 8&#x3D;\&quot;Arm\&quot;, 16&#x3D;\&quot;Hand\&quot;, 32&#x3D;\&quot;Leg\&quot;, 64&#x3D;\&quot;Foot\&quot;, -1&#x3D;\&quot;Everywhere\&quot;</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.AttackerActiveItem">
            <summary>
            Gets or Sets AttackerActiveItem
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.VictimActiveItem">
            <summary>
            Gets or Sets VictimActiveItem
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.AttackerPosition">
            <summary>
            Gets or Sets AttackerPosition
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Hit.VictimPosition">
            <summary>
            Gets or Sets VictimPosition
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.Equals(Org.OpenAPITools.Model.Hit)">
            <summary>
            Returns true if Hit instances are equal
            </summary>
            <param name="input">Instance of Hit to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Hit.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.HitAttackerActiveItem">
            <summary>
            HitAttackerActiveItem
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.HitAttackerActiveItem.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.HitAttackerActiveItem" /> class.
            </summary>
            <param name="itemName">itemName.</param>
            <param name="itemId">itemId.</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.HitAttackerActiveItem.ItemName">
            <summary>
            Gets or Sets ItemName
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.HitAttackerActiveItem.ItemId">
            <summary>
            Gets or Sets ItemId
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.HitAttackerActiveItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HitAttackerActiveItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HitAttackerActiveItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HitAttackerActiveItem.Equals(Org.OpenAPITools.Model.HitAttackerActiveItem)">
            <summary>
            Returns true if HitAttackerActiveItem instances are equal
            </summary>
            <param name="input">Instance of HitAttackerActiveItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HitAttackerActiveItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HitAttackerActiveItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.HuntForWeapon">
            <summary>
            If player not sat it means the item has not been found yet.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.HuntForWeapon" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.HuntForWeapon" /> class.
            </summary>
            <param name="playerSteamId">The player&#39;s steamID64, must be 17 chars long..</param>
            <param name="playerName">The player name who was the first. .</param>
            <param name="pickupTime">The time the item was pickedup..</param>
            <param name="connectionTime">The time the player connected to the server..</param>
            <param name="itemNotificationId">itemNotificationId (required).</param>
            <param name="itemName">Name of the item (required).</param>
            <param name="itemType">Type of the item (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.HuntForWeapon.PlayerSteamId">
            <summary>
            The player&#39;s steamID64, must be 17 chars long.
            </summary>
            <value>The player&#39;s steamID64, must be 17 chars long.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.HuntForWeapon.PlayerName">
            <summary>
            The player name who was the first. 
            </summary>
            <value>The player name who was the first. </value>
        </member>
        <member name="P:Org.OpenAPITools.Model.HuntForWeapon.PickupTime">
            <summary>
            The time the item was pickedup.
            </summary>
            <value>The time the item was pickedup.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.HuntForWeapon.ConnectionTime">
            <summary>
            The time the player connected to the server.
            </summary>
            <value>The time the player connected to the server.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.HuntForWeapon.ItemNotificationId">
            <summary>
            Gets or Sets ItemNotificationId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.HuntForWeapon.ItemName">
            <summary>
            Name of the item
            </summary>
            <value>Name of the item</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.HuntForWeapon.ItemType">
            <summary>
            Type of the item
            </summary>
            <value>Type of the item</value>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.Equals(Org.OpenAPITools.Model.HuntForWeapon)">
            <summary>
            Returns true if HuntForWeapon instances are equal
            </summary>
            <param name="input">Instance of HuntForWeapon to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.HuntForWeapon.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.LeaderBoardPlayer">
            <summary>
            LeaderBoardPlayer
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.LeaderBoardPlayer" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.LeaderBoardPlayer" /> class.
            </summary>
            <param name="rank">rank (required).</param>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long. (required).</param>
            <param name="name">name (required).</param>
            <param name="killCount">killCount (required).</param>
            <param name="deathCount">deathCount (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.LeaderBoardPlayer.Rank">
            <summary>
            Gets or Sets Rank
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.LeaderBoardPlayer.SteamId">
            <summary>
            The player&#39;s steamID64, must be 17 chars long.
            </summary>
            <value>The player&#39;s steamID64, must be 17 chars long.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.LeaderBoardPlayer.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.LeaderBoardPlayer.KillCount">
            <summary>
            Gets or Sets KillCount
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.LeaderBoardPlayer.DeathCount">
            <summary>
            Gets or Sets DeathCount
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.Equals(Org.OpenAPITools.Model.LeaderBoardPlayer)">
            <summary>
            Returns true if LeaderBoardPlayer instances are equal
            </summary>
            <param name="input">Instance of LeaderBoardPlayer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.LeaderBoardPlayer.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.PlayerAchievement">
            <summary>
            PlayerAchievement
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerAchievement" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.#ctor(System.DateTime,Org.OpenAPITools.Model.Achievement)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerAchievement" /> class.
            </summary>
            <param name="receiveDate">receiveDate (required).</param>
            <param name="achievement">achievement (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerAchievement.ReceiveDate">
            <summary>
            Gets or Sets ReceiveDate
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerAchievement.Achievement">
            <summary>
            Gets or Sets Achievement
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.Equals(Org.OpenAPITools.Model.PlayerAchievement)">
            <summary>
            Returns true if PlayerAchievement instances are equal
            </summary>
            <param name="input">Instance of PlayerAchievement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievement.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.PlayerAchievementGroup">
            <summary>
            PlayerAchievementGroup
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerAchievementGroup" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.#ctor(System.Int32,System.Collections.Generic.List{Org.OpenAPITools.Model.PlayerAchievementGroup},System.Collections.Generic.List{Org.OpenAPITools.Model.PlayerAchievement},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerAchievementGroup" /> class.
            </summary>
            <param name="groupId">groupId (required).</param>
            <param name="subGroups">subGroups (required).</param>
            <param name="achievements">achievements (required).</param>
            <param name="achievementsCompletedCount">achievementsCompletedCount (required).</param>
            <param name="achievementPoints">achievementPoints (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerAchievementGroup.GroupId">
            <summary>
            Gets or Sets GroupId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerAchievementGroup.SubGroups">
            <summary>
            Gets or Sets SubGroups
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerAchievementGroup.Achievements">
            <summary>
            Gets or Sets Achievements
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerAchievementGroup.AchievementsCompletedCount">
            <summary>
            Gets or Sets AchievementsCompletedCount
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerAchievementGroup.AchievementPoints">
            <summary>
            Gets or Sets AchievementPoints
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.Equals(Org.OpenAPITools.Model.PlayerAchievementGroup)">
            <summary>
            Returns true if PlayerAchievementGroup instances are equal
            </summary>
            <param name="input">Instance of PlayerAchievementGroup to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerAchievementGroup.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.PlayerPosition">
            <summary>
            PlayerPosition
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerPosition" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerPosition" /> class.
            </summary>
            <param name="x">x (required).</param>
            <param name="y">y (required).</param>
            <param name="z">z (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerPosition.X">
            <summary>
            Gets or Sets X
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerPosition.Y">
            <summary>
            Gets or Sets Y
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerPosition.Z">
            <summary>
            Gets or Sets Z
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.Equals(Org.OpenAPITools.Model.PlayerPosition)">
            <summary>
            Returns true if PlayerPosition instances are equal
            </summary>
            <param name="input">Instance of PlayerPosition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerPosition.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.PlayerTitle">
            <summary>
            PlayerTitle
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerTitle" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.#ctor(System.Int32,System.DateTime,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.PlayerTitle" /> class.
            </summary>
            <param name="titleId">titleId (required).</param>
            <param name="recievedDate">recievedDate (required).</param>
            <param name="title">title (required).</param>
            <param name="titleColor">titleColor (required).</param>
            <param name="description">description (required).</param>
            <param name="requiredAchievements">requiredAchievements.</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerTitle.TitleId">
            <summary>
            Gets or Sets TitleId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerTitle.RecievedDate">
            <summary>
            Gets or Sets RecievedDate
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerTitle.Title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerTitle.TitleColor">
            <summary>
            Gets or Sets TitleColor
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerTitle.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.PlayerTitle.RequiredAchievements">
            <summary>
            Gets or Sets RequiredAchievements
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.Equals(Org.OpenAPITools.Model.PlayerTitle)">
            <summary>
            Returns true if PlayerTitle instances are equal
            </summary>
            <param name="input">Instance of PlayerTitle to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.PlayerTitle.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.RankPlayer">
            <summary>
            RankPlayer
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.RankPlayer" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.RankPlayer" /> class.
            </summary>
            <param name="steamId">The player&#39;s steamID64, must be 17 chars long. (required).</param>
            <param name="name">name (required).</param>
            <param name="killCount">killCount (required).</param>
            <param name="deathCount">deathCount (required).</param>
            <param name="killRank">killRank (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.RankPlayer.SteamId">
            <summary>
            The player&#39;s steamID64, must be 17 chars long.
            </summary>
            <value>The player&#39;s steamID64, must be 17 chars long.</value>
        </member>
        <member name="P:Org.OpenAPITools.Model.RankPlayer.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.RankPlayer.KillCount">
            <summary>
            Gets or Sets KillCount
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.RankPlayer.DeathCount">
            <summary>
            Gets or Sets DeathCount
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.RankPlayer.KillRank">
            <summary>
            Gets or Sets KillRank
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.Equals(Org.OpenAPITools.Model.RankPlayer)">
            <summary>
            Returns true if RankPlayer instances are equal
            </summary>
            <param name="input">Instance of RankPlayer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RankPlayer.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.RelatedTitle">
            <summary>
            RelatedTitle
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.RelatedTitle" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.#ctor(System.Int32,System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.RelatedTitle" /> class.
            </summary>
            <param name="titleId">titleId (required).</param>
            <param name="title">title (required).</param>
            <param name="requiredAchievements">requiredAchievements (required).</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.RelatedTitle.TitleId">
            <summary>
            Gets or Sets TitleId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.RelatedTitle.Title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.RelatedTitle.RequiredAchievements">
            <summary>
            Gets or Sets RequiredAchievements
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.Equals(Org.OpenAPITools.Model.RelatedTitle)">
            <summary>
            Returns true if RelatedTitle instances are equal
            </summary>
            <param name="input">Instance of RelatedTitle to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.RelatedTitle.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.Server">
            <summary>
            Server
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Server" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Server" /> class.
            </summary>
            <param name="serverId">serverId (required).</param>
            <param name="name">name (required).</param>
            <param name="serverIp">serverIp (required).</param>
            <param name="serverPort">serverPort (required).</param>
            <param name="mapWipeInterval">mapWipeInterval (required).</param>
            <param name="bpWipeInterval">bpWipeInterval (required).</param>
            <param name="maxPlayers">maxPlayers (required).</param>
            <param name="onlineCount">onlineCount (required).</param>
            <param name="currentWipeId">currentWipeId.</param>
            <param name="wipeStart">wipeStart.</param>
            <param name="wipeEnd">wipeEnd.</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.ServerId">
            <summary>
            Gets or Sets ServerId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.ServerIp">
            <summary>
            Gets or Sets ServerIp
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.ServerPort">
            <summary>
            Gets or Sets ServerPort
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.MapWipeInterval">
            <summary>
            Gets or Sets MapWipeInterval
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.BpWipeInterval">
            <summary>
            Gets or Sets BpWipeInterval
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.MaxPlayers">
            <summary>
            Gets or Sets MaxPlayers
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.OnlineCount">
            <summary>
            Gets or Sets OnlineCount
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.CurrentWipeId">
            <summary>
            Gets or Sets CurrentWipeId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.WipeStart">
            <summary>
            Gets or Sets WipeStart
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Server.WipeEnd">
            <summary>
            Gets or Sets WipeEnd
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.Equals(Org.OpenAPITools.Model.Server)">
            <summary>
            Returns true if Server instances are equal
            </summary>
            <param name="input">Instance of Server to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Server.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Title" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.#ctor(System.Int32,System.String,System.String,System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Title" /> class.
            </summary>
            <param name="titleId">titleId (required).</param>
            <param name="title">title (required).</param>
            <param name="titleColor">titleColor (required).</param>
            <param name="description">description (required).</param>
            <param name="requiredAchievements">requiredAchievements.</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.Title.TitleId">
            <summary>
            Gets or Sets TitleId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Title._Title">
            <summary>
            Gets or Sets _Title
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Title.TitleColor">
            <summary>
            Gets or Sets TitleColor
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Title.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Title.RequiredAchievements">
            <summary>
            Gets or Sets RequiredAchievements
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.Equals(Org.OpenAPITools.Model.Title)">
            <summary>
            Returns true if Title instances are equal
            </summary>
            <param name="input">Instance of Title to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Title.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Org.OpenAPITools.Model.Wipe">
            <summary>
            Wipe
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Wipe" /> class.
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.#ctor(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.OpenAPITools.Model.Wipe" /> class.
            </summary>
            <param name="wipeId">wipeId (required).</param>
            <param name="wipeStart">wipeStart (required).</param>
            <param name="wipeEnd">wipeEnd.</param>
        </member>
        <member name="P:Org.OpenAPITools.Model.Wipe.WipeId">
            <summary>
            Gets or Sets WipeId
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Wipe.WipeStart">
            <summary>
            Gets or Sets WipeStart
            </summary>
        </member>
        <member name="P:Org.OpenAPITools.Model.Wipe.WipeEnd">
            <summary>
            Gets or Sets WipeEnd
            </summary>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.Equals(Org.OpenAPITools.Model.Wipe)">
            <summary>
            Returns true if Wipe instances are equal
            </summary>
            <param name="input">Instance of Wipe to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.OpenAPITools.Model.Wipe.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
    </members>
</doc>

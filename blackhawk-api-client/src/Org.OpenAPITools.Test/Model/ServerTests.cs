/* 
 * Blackhawk API
 *
 * Blackhawk API for the rust server
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jonas-lt@live.dk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing Server
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ServerTests
    {
        // TODO uncomment below to declare an instance variable for Server
        //private Server instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Server
            //instance = new Server();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Server
        /// </summary>
        [Test]
        public void ServerInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" Server
            //Assert.IsInstanceOf(typeof(Server), instance);
        }


        /// <summary>
        /// Test the property 'ServerId'
        /// </summary>
        [Test]
        public void ServerIdTest()
        {
            // TODO unit test for the property 'ServerId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ServerIp'
        /// </summary>
        [Test]
        public void ServerIpTest()
        {
            // TODO unit test for the property 'ServerIp'
        }
        /// <summary>
        /// Test the property 'ServerPort'
        /// </summary>
        [Test]
        public void ServerPortTest()
        {
            // TODO unit test for the property 'ServerPort'
        }
        /// <summary>
        /// Test the property 'MapWipeInterval'
        /// </summary>
        [Test]
        public void MapWipeIntervalTest()
        {
            // TODO unit test for the property 'MapWipeInterval'
        }
        /// <summary>
        /// Test the property 'BpWipeInterval'
        /// </summary>
        [Test]
        public void BpWipeIntervalTest()
        {
            // TODO unit test for the property 'BpWipeInterval'
        }
        /// <summary>
        /// Test the property 'MaxPlayers'
        /// </summary>
        [Test]
        public void MaxPlayersTest()
        {
            // TODO unit test for the property 'MaxPlayers'
        }
        /// <summary>
        /// Test the property 'OnlineCount'
        /// </summary>
        [Test]
        public void OnlineCountTest()
        {
            // TODO unit test for the property 'OnlineCount'
        }
        /// <summary>
        /// Test the property 'CurrentWipeId'
        /// </summary>
        [Test]
        public void CurrentWipeIdTest()
        {
            // TODO unit test for the property 'CurrentWipeId'
        }
        /// <summary>
        /// Test the property 'WipeStart'
        /// </summary>
        [Test]
        public void WipeStartTest()
        {
            // TODO unit test for the property 'WipeStart'
        }
        /// <summary>
        /// Test the property 'WipeEnd'
        /// </summary>
        [Test]
        public void WipeEndTest()
        {
            // TODO unit test for the property 'WipeEnd'
        }

    }

}
